swagger: '2.0'
info:
  version: 1.0.0
  title: Bookstore API
  description: "TODO: do better than Bookstore API description"

schemes:
  - http
host: bookstore.orthodox.net
basePath: /api/v1

securityDefinitions:
  basic:
    type: basic

# To apply Basic auth to the whole API:
security:
  - basic: []

paths:
  /inventory-items:
    post:
      summary: Create a new Inventory Item
      parameters:
        - in: body
          name: fields
          schema:
            $ref: '#/definitions/InventoryFields'
      responses:
        401:
          $ref: '#/responses/UnauthorizedError'

        201:
          description: Successful operation
          schema:
            $ref: '#/definitions/InventoryItem'
    get:
      summary: Get all available inventory
      parameters:
        - in: query
          name: category
          type: string
          description: >
            Category of the inventory to filter by:
              * `biblio` - Books, calendars, etc.
              * `liturgical` - Oil, insence, etc.
      responses:
        500:
          $ref: '#/responses/Error'

        401:
          $ref: '#/responses/UnauthorizedError'

        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/InventoryItem'

  /inventory-items/{id}:
    delete:
      summary: Delete Inventory item by ID
      parameters:
        - in: path
          name: id
          required: true
          type: string
          format: uuid
          description: Inventory ID
      responses:
        401:
          $ref: '#/responses/UnauthorizedError'
        204:
          description: Successful operation

    get:
      summary: Get an inventory by ID
      parameters:
        - in: path
          name: id
          required: true
          type: string
          format: uuid
          description: Inventory ID
      responses:
        401:
          $ref: '#/responses/UnauthorizedError'
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/InventoryItem'

    patch:
      summary: Update Inventory item by ID
      parameters:
        - in: path
          name: id
          required: true
          type: string
          format: uuid
          description: Inventory ID
        - in: body
          name: fields
          schema:
            $ref: '#/definitions/InventoryFields'

      responses:
        401:
          $ref: '#/responses/UnauthorizedError'
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/InventoryItem'

responses:
  Error:
    description: Internal Server Error
    headers:
      WWW_Error:
        type: string
  UnauthorizedError:
    description: Autentication information is missing or invalid
    headers:
      WWW_Authenticate:
        type: string

definitions:
  Principal:
    type: object
    properties:
      token:
        type: string
      scopes:
        type: string
  InventoryFields:
    type: object
    properties:
      name:
        type: string
      category:
        type: string
  InventoryItem:
    allOf:
      - $ref: '#/definitions/InventoryFields'
      - type: object
        properties:
          id:
            type: string
            format: uuid