// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/alexschexc/bookstore/api/models"
)

// GetInventoryItemsOKCode is the HTTP code returned for type GetInventoryItemsOK
const GetInventoryItemsOKCode int = 200

/*
GetInventoryItemsOK Successful operation

swagger:response getInventoryItemsOK
*/
type GetInventoryItemsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.InventoryItem `json:"body,omitempty"`
}

// NewGetInventoryItemsOK creates GetInventoryItemsOK with default headers values
func NewGetInventoryItemsOK() *GetInventoryItemsOK {

	return &GetInventoryItemsOK{}
}

// WithPayload adds the payload to the get inventory items o k response
func (o *GetInventoryItemsOK) WithPayload(payload []*models.InventoryItem) *GetInventoryItemsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get inventory items o k response
func (o *GetInventoryItemsOK) SetPayload(payload []*models.InventoryItem) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInventoryItemsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.InventoryItem, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetInventoryItemsUnauthorizedCode is the HTTP code returned for type GetInventoryItemsUnauthorized
const GetInventoryItemsUnauthorizedCode int = 401

/*
GetInventoryItemsUnauthorized Autentication information is missing or invalid

swagger:response getInventoryItemsUnauthorized
*/
type GetInventoryItemsUnauthorized struct {
	/*

	 */
	WWWAuthenticate string `json:"WWW_Authenticate"`
}

// NewGetInventoryItemsUnauthorized creates GetInventoryItemsUnauthorized with default headers values
func NewGetInventoryItemsUnauthorized() *GetInventoryItemsUnauthorized {

	return &GetInventoryItemsUnauthorized{}
}

// WithWWWAuthenticate adds the wWWAuthenticate to the get inventory items unauthorized response
func (o *GetInventoryItemsUnauthorized) WithWWWAuthenticate(wWWAuthenticate string) *GetInventoryItemsUnauthorized {
	o.WWWAuthenticate = wWWAuthenticate
	return o
}

// SetWWWAuthenticate sets the wWWAuthenticate to the get inventory items unauthorized response
func (o *GetInventoryItemsUnauthorized) SetWWWAuthenticate(wWWAuthenticate string) {
	o.WWWAuthenticate = wWWAuthenticate
}

// WriteResponse to the client
func (o *GetInventoryItemsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW_Authenticate

	wWWAuthenticate := o.WWWAuthenticate
	if wWWAuthenticate != "" {
		rw.Header().Set("WWW_Authenticate", wWWAuthenticate)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// GetInventoryItemsInternalServerErrorCode is the HTTP code returned for type GetInventoryItemsInternalServerError
const GetInventoryItemsInternalServerErrorCode int = 500

/*
GetInventoryItemsInternalServerError Internal Server Error

swagger:response getInventoryItemsInternalServerError
*/
type GetInventoryItemsInternalServerError struct {
	/*

	 */
	WWWError string `json:"WWW_Error"`
}

// NewGetInventoryItemsInternalServerError creates GetInventoryItemsInternalServerError with default headers values
func NewGetInventoryItemsInternalServerError() *GetInventoryItemsInternalServerError {

	return &GetInventoryItemsInternalServerError{}
}

// WithWWWError adds the wWWError to the get inventory items internal server error response
func (o *GetInventoryItemsInternalServerError) WithWWWError(wWWError string) *GetInventoryItemsInternalServerError {
	o.WWWError = wWWError
	return o
}

// SetWWWError sets the wWWError to the get inventory items internal server error response
func (o *GetInventoryItemsInternalServerError) SetWWWError(wWWError string) {
	o.WWWError = wWWError
}

// WriteResponse to the client
func (o *GetInventoryItemsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW_Error

	wWWError := o.WWWError
	if wWWError != "" {
		rw.Header().Set("WWW_Error", wWWError)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
